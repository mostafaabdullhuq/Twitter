{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TweetsService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.BASE_URL = 'http://localhost:3000/tweets';\n  }\n  getTweets() {\n    return this.httpClient.get(this.BASE_URL);\n  }\n  getTweetById(id) {\n    return this.httpClient.get(`${this.BASE_URL}/${id}`);\n  }\n  addTweet(tweet) {\n    return this.httpClient.post(this.BASE_URL, tweet);\n  }\n  updateTweet(id, newTweet) {\n    return this.httpClient.put(`${this.BASE_URL}/${id}`, newTweet);\n  }\n  deleteTweetById(id) {\n    return this.httpClient.delete(`${this.BASE_URL}/${id}`);\n  }\n  getTweetsByUserId(id) {\n    return this.httpClient.get(`${this.BASE_URL}/user/${id}`);\n  }\n  getTweetsByHashtag(hashtag) {\n    return this.httpClient.get(`${this.BASE_URL}/hashtag/${hashtag}`);\n  }\n  getTweetsByMention(mention) {\n    return this.httpClient.get(`${this.BASE_URL}/mention/${mention}`);\n  }\n  getTweetsByDate(date) {\n    return this.httpClient.get(`${this.BASE_URL}/date/${date}`);\n  }\n  getTweetsByDateRange(startDate, endDate) {\n    return this.httpClient.get(`${this.BASE_URL}/daterange/${startDate}/${endDate}`);\n  }\n  getTweetsByHashtagAndDate(hashtag, date) {\n    return this.httpClient.get(`${this.BASE_URL}/hashtag/${hashtag}/date/${date}`);\n  }\n  getTweetsByHashtagAndDateRange(hashtag, startDate, endDate) {\n    return this.httpClient.get(`${this.BASE_URL}/hashtag/${hashtag}/daterange/${startDate}/${endDate}`);\n  }\n  getTweetsByMentionAndDate(mention, date) {\n    return this.httpClient.get(`${this.BASE_URL}/mention/${mention}/date/${date}`);\n  }\n  getTweetsByMentionAndDateRange(mention, startDate, endDate) {\n    return this.httpClient.get(`${this.BASE_URL}/mention/${mention}/daterange/${startDate}/${endDate}`);\n  }\n  getTweetsByHashtagAndMention(hashtag, mention) {\n    return this.httpClient.get(`${this.BASE_URL}/hashtag/${hashtag}/mention/${mention}`);\n  }\n  getFollowingUsersTweets(id) {\n    return this.httpClient.get(`${this.BASE_URL}/following/${id}`);\n  }\n}\nTweetsService.ɵfac = function TweetsService_Factory(t) {\n  return new (t || TweetsService)(i0.ɵɵinject(i1.HttpClient));\n};\nTweetsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TweetsService,\n  factory: TweetsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,aAAa;EAGxBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAFtB,aAAQ,GAAG,8BAA8B;EAEJ;EAE7CC,SAAS;IACP,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CAAC,IAAI,CAACC,QAAQ,CAAC;EAC3C;EAEAC,YAAY,CAACC,EAAO;IAClB,OAAO,IAAI,CAACL,UAAU,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,QAAQ,IAAIE,EAAE,EAAE,CAAC;EACtD;EAEAC,QAAQ,CAACC,KAAU;IACjB,OAAO,IAAI,CAACP,UAAU,CAACQ,IAAI,CAAC,IAAI,CAACL,QAAQ,EAAEI,KAAK,CAAC;EACnD;EAEAE,WAAW,CAACJ,EAAO,EAAEK,QAAa;IAChC,OAAO,IAAI,CAACV,UAAU,CAACW,GAAG,CAAC,GAAG,IAAI,CAACR,QAAQ,IAAIE,EAAE,EAAE,EAAEK,QAAQ,CAAC;EAChE;EAEAE,eAAe,CAACP,EAAO;IACrB,OAAO,IAAI,CAACL,UAAU,CAACa,MAAM,CAAC,GAAG,IAAI,CAACV,QAAQ,IAAIE,EAAE,EAAE,CAAC;EACzD;EAEAS,iBAAiB,CAACT,EAAO;IACvB,OAAO,IAAI,CAACL,UAAU,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,QAAQ,SAASE,EAAE,EAAE,CAAC;EAC3D;EAEAU,kBAAkB,CAACC,OAAY;IAC7B,OAAO,IAAI,CAAChB,UAAU,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,QAAQ,YAAYa,OAAO,EAAE,CAAC;EACnE;EAEAC,kBAAkB,CAACC,OAAY;IAC7B,OAAO,IAAI,CAAClB,UAAU,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,QAAQ,YAAYe,OAAO,EAAE,CAAC;EACnE;EAEAC,eAAe,CAACC,IAAS;IACvB,OAAO,IAAI,CAACpB,UAAU,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,QAAQ,SAASiB,IAAI,EAAE,CAAC;EAC7D;EAEAC,oBAAoB,CAACC,SAAc,EAAEC,OAAY;IAC/C,OAAO,IAAI,CAACvB,UAAU,CAACE,GAAG,CACxB,GAAG,IAAI,CAACC,QAAQ,cAAcmB,SAAS,IAAIC,OAAO,EAAE,CACrD;EACH;EAEAC,yBAAyB,CAACR,OAAY,EAAEI,IAAS;IAC/C,OAAO,IAAI,CAACpB,UAAU,CAACE,GAAG,CACxB,GAAG,IAAI,CAACC,QAAQ,YAAYa,OAAO,SAASI,IAAI,EAAE,CACnD;EACH;EAEAK,8BAA8B,CAACT,OAAY,EAAEM,SAAc,EAAEC,OAAY;IACvE,OAAO,IAAI,CAACvB,UAAU,CAACE,GAAG,CACxB,GAAG,IAAI,CAACC,QAAQ,YAAYa,OAAO,cAAcM,SAAS,IAAIC,OAAO,EAAE,CACxE;EACH;EAEAG,yBAAyB,CAACR,OAAY,EAAEE,IAAS;IAC/C,OAAO,IAAI,CAACpB,UAAU,CAACE,GAAG,CACxB,GAAG,IAAI,CAACC,QAAQ,YAAYe,OAAO,SAASE,IAAI,EAAE,CACnD;EACH;EAEAO,8BAA8B,CAACT,OAAY,EAAEI,SAAc,EAAEC,OAAY;IACvE,OAAO,IAAI,CAACvB,UAAU,CAACE,GAAG,CACxB,GAAG,IAAI,CAACC,QAAQ,YAAYe,OAAO,cAAcI,SAAS,IAAIC,OAAO,EAAE,CACxE;EACH;EAEAK,4BAA4B,CAACZ,OAAY,EAAEE,OAAY;IACrD,OAAO,IAAI,CAAClB,UAAU,CAACE,GAAG,CACxB,GAAG,IAAI,CAACC,QAAQ,YAAYa,OAAO,YAAYE,OAAO,EAAE,CACzD;EACH;EAEAW,uBAAuB,CAACxB,EAAO;IAC7B,OAAO,IAAI,CAACL,UAAU,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,QAAQ,cAAcE,EAAE,EAAE,CAAC;EAChE;;AA/EWP,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAgC,SAAbhC,aAAa;EAAAiC,YAFZ;AAAM","names":["TweetsService","constructor","httpClient","getTweets","get","BASE_URL","getTweetById","id","addTweet","tweet","post","updateTweet","newTweet","put","deleteTweetById","delete","getTweetsByUserId","getTweetsByHashtag","hashtag","getTweetsByMention","mention","getTweetsByDate","date","getTweetsByDateRange","startDate","endDate","getTweetsByHashtagAndDate","getTweetsByHashtagAndDateRange","getTweetsByMentionAndDate","getTweetsByMentionAndDateRange","getTweetsByHashtagAndMention","getFollowingUsersTweets","factory","providedIn"],"sourceRoot":"","sources":["D:\\fullstack-php\\finalProject\\Twitter\\Twitter\\src\\app\\Services\\tweets.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TweetsService {\r\n  private BASE_URL = 'http://localhost:3000/tweets';\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getTweets() {\r\n    return this.httpClient.get(this.BASE_URL);\r\n  }\r\n\r\n  getTweetById(id: any) {\r\n    return this.httpClient.get(`${this.BASE_URL}/${id}`);\r\n  }\r\n\r\n  addTweet(tweet: any) {\r\n    return this.httpClient.post(this.BASE_URL, tweet);\r\n  }\r\n\r\n  updateTweet(id: any, newTweet: any) {\r\n    return this.httpClient.put(`${this.BASE_URL}/${id}`, newTweet);\r\n  }\r\n\r\n  deleteTweetById(id: any) {\r\n    return this.httpClient.delete(`${this.BASE_URL}/${id}`);\r\n  }\r\n\r\n  getTweetsByUserId(id: any) {\r\n    return this.httpClient.get(`${this.BASE_URL}/user/${id}`);\r\n  }\r\n\r\n  getTweetsByHashtag(hashtag: any) {\r\n    return this.httpClient.get(`${this.BASE_URL}/hashtag/${hashtag}`);\r\n  }\r\n\r\n  getTweetsByMention(mention: any) {\r\n    return this.httpClient.get(`${this.BASE_URL}/mention/${mention}`);\r\n  }\r\n\r\n  getTweetsByDate(date: any) {\r\n    return this.httpClient.get(`${this.BASE_URL}/date/${date}`);\r\n  }\r\n\r\n  getTweetsByDateRange(startDate: any, endDate: any) {\r\n    return this.httpClient.get(\r\n      `${this.BASE_URL}/daterange/${startDate}/${endDate}`\r\n    );\r\n  }\r\n\r\n  getTweetsByHashtagAndDate(hashtag: any, date: any) {\r\n    return this.httpClient.get(\r\n      `${this.BASE_URL}/hashtag/${hashtag}/date/${date}`\r\n    );\r\n  }\r\n\r\n  getTweetsByHashtagAndDateRange(hashtag: any, startDate: any, endDate: any) {\r\n    return this.httpClient.get(\r\n      `${this.BASE_URL}/hashtag/${hashtag}/daterange/${startDate}/${endDate}`\r\n    );\r\n  }\r\n\r\n  getTweetsByMentionAndDate(mention: any, date: any) {\r\n    return this.httpClient.get(\r\n      `${this.BASE_URL}/mention/${mention}/date/${date}`\r\n    );\r\n  }\r\n\r\n  getTweetsByMentionAndDateRange(mention: any, startDate: any, endDate: any) {\r\n    return this.httpClient.get(\r\n      `${this.BASE_URL}/mention/${mention}/daterange/${startDate}/${endDate}`\r\n    );\r\n  }\r\n\r\n  getTweetsByHashtagAndMention(hashtag: any, mention: any) {\r\n    return this.httpClient.get(\r\n      `${this.BASE_URL}/hashtag/${hashtag}/mention/${mention}`\r\n    );\r\n  }\r\n\r\n  getFollowingUsersTweets(id: any) {\r\n    return this.httpClient.get(`${this.BASE_URL}/following/${id}`);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}