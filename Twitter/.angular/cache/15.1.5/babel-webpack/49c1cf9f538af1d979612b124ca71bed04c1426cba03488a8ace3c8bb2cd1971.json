{"ast":null,"code":"import { BeforeLoginService } from './Services/before-login.service';\nimport { RouterModule } from '@angular/router';\nimport { BookmarksComponent } from './Components/bookmarks/bookmarks.component';\nimport { ConnectComponent } from './Components/connect/connect.component';\nimport { ExploreComponent } from './Components/explore/explore.component';\nimport { ExploreoutComponent } from './Components/exploreout/exploreout.component';\nimport { HomeComponent } from './Components/home/home.component';\nimport { MessagesComponent } from './Components/messages/messages.component';\nimport { NotificationComponent } from './Components/notification/notification.component';\nimport { ProfileComponent } from './Components/profile/profile.component';\nimport { SettingsComponent } from './Components/settings/settings.component';\nimport { SigninComponent } from './Components/signin/signin.component';\nimport { SignupComponent } from './Components/signup/signup.component';\nimport { NewMessageComponent } from './Components/new-message/new-message.component';\nimport { AfterLoginService } from './Services/after-login.service';\nimport { RequestResetComponent } from './Components/password/request-reset/request-reset.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  component: ExploreoutComponent,\n  canActivate: [BeforeLoginService]\n}, {\n  path: 'login',\n  component: SigninComponent,\n  canActivate: [BeforeLoginService]\n}, {\n  path: 'signup',\n  component: SignupComponent,\n  canActivate: [BeforeLoginService]\n}, {\n  path: 'exploreout',\n  component: ExploreoutComponent,\n  canActivate: [BeforeLoginService]\n}, {\n  path: 'home',\n  component: HomeComponent,\n  canActivate: [AfterLoginService]\n}, {\n  path: 'explore',\n  component: ExploreComponent,\n  canActivate: [AfterLoginService]\n}, {\n  path: 'notifications',\n  component: NotificationComponent,\n  canActivate: [AfterLoginService]\n}, {\n  path: 'messages',\n  component: MessagesComponent,\n  canActivate: [AfterLoginService]\n}, {\n  path: 'bookmarks',\n  component: BookmarksComponent,\n  canActivate: [AfterLoginService]\n}, {\n  path: 'settings/account',\n  component: SettingsComponent,\n  canActivate: [AfterLoginService]\n}, {\n  path: 'connect',\n  component: ConnectComponent,\n  canActivate: [AfterLoginService]\n}, {\n  path: ':user',\n  component: ProfileComponent,\n  canActivate: [AfterLoginService]\n}, {\n  path: 'newmessage',\n  component: NewMessageComponent,\n  canActivate: [AfterLoginService]\n}, {\n  path: 'request-password-reset',\n  component: RequestResetComponent,\n  canActivate: [BeforeLoginService]\n}, {\n  path: 'response-password-reset',\n  component: ResponseResetComponent,\n  canActivate: [BeforeLoginService]\n}];\nexport class AppRoutingModule {}\nAppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {\n  return new (t || AppRoutingModule)();\n};\nAppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppRoutingModule\n});\nAppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [RouterModule.forRoot(routes), RouterModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"mappings":"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","names":["BeforeLoginService","RouterModule","BookmarksComponent","ConnectComponent","ExploreComponent","ExploreoutComponent","HomeComponent","MessagesComponent","NotificationComponent","ProfileComponent","SettingsComponent","SigninComponent","SignupComponent","NewMessageComponent","AfterLoginService","RequestResetComponent","routes","path","component","canActivate","ResponseResetComponent","AppRoutingModule","forRoot","imports","exports"],"sourceRoot":"","sources":["D:\\fullstack-php\\finalProject\\Twitter\\Twitter\\src\\app\\app-routing.module.ts"],"sourcesContent":["import { BeforeLoginService } from './Services/before-login.service';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes, CanActivate } from '@angular/router';\r\nimport { BookmarksComponent } from './Components/bookmarks/bookmarks.component';\r\nimport { ConnectComponent } from './Components/connect/connect.component';\r\nimport { ExploreComponent } from './Components/explore/explore.component';\r\nimport { ExploreoutComponent } from './Components/exploreout/exploreout.component';\r\nimport { HomeComponent } from './Components/home/home.component';\r\nimport { MessagesComponent } from './Components/messages/messages.component';\r\nimport { NotificationComponent } from './Components/notification/notification.component';\r\nimport { ProfileComponent } from './Components/profile/profile.component';\r\nimport { SettingsComponent } from './Components/settings/settings.component';\r\nimport { SigninComponent } from './Components/signin/signin.component';\r\nimport { SignupComponent } from './Components/signup/signup.component';\r\nimport { NewMessageComponent } from './Components/new-message/new-message.component';\r\nimport { AfterLoginService } from './Services/after-login.service';\r\nimport { RequestResetComponent } from './Components/password/request-reset/request-reset.component';\r\nconst routes: Routes = [\r\n  { path: '', component: ExploreoutComponent,\r\n  canActivate: [BeforeLoginService],},\r\n  { path: 'login', component: SigninComponent,\r\n  canActivate: [BeforeLoginService],},\r\n\r\n  { path: 'signup', component: SignupComponent,\r\n  canActivate: [BeforeLoginService],},\r\n\r\n  { path:'exploreout' , component: ExploreoutComponent,\r\n  canActivate: [BeforeLoginService]},\r\n\r\n  { path: 'home', component: HomeComponent,\r\n  canActivate: [AfterLoginService]},\r\n\r\n  { path: 'explore', component: ExploreComponent,\r\n  canActivate: [AfterLoginService] },\r\n\r\n  { path: 'notifications', component: NotificationComponent,\r\n  canActivate: [AfterLoginService] },\r\n\r\n  { path: 'messages', component: MessagesComponent,\r\n  canActivate: [AfterLoginService] },\r\n\r\n  { path: 'bookmarks', component: BookmarksComponent,\r\n  canActivate: [AfterLoginService] },\r\n\r\n  { path: 'settings/account', component: SettingsComponent,\r\n  canActivate: [AfterLoginService] },\r\n\r\n  { path: 'connect', component: ConnectComponent,\r\n  canActivate: [AfterLoginService] },\r\n  { path: ':user', component: ProfileComponent,\r\n  canActivate: [AfterLoginService] },\r\n  { path: 'newmessage', component: NewMessageComponent,\r\n  canActivate: [AfterLoginService]},\r\n  {\r\n    path: 'request-password-reset',\r\n    component: RequestResetComponent,\r\n    canActivate: [BeforeLoginService]\r\n  },\r\n  {\r\n    path: 'response-password-reset',\r\n    component: ResponseResetComponent,\r\n    canActivate: [BeforeLoginService]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}